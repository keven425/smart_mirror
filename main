#!/usr/bin/env python

import sys
import time
from cv.tracking import Tracking
import chrome_app.chrome_message as chrome_message
from tof.tof import Tof


current_milli_time = lambda: int(round(time.time() * 1000))

if __name__ == '__main__':

  # set up time of flight sensor
  tof = Tof()
  timing = tof.get_timing()

  # set up computer vision
  tracking = Tracking()
  tracking.detect_face(True)
  tracking.detect_smile(True)

  SMILE_TIME = 1000 # only trigger, if smile longer than 1000 milliseconds
  first_smile_t = -1 # time of last smile frame


  # main loop
  try:
    while True:
      # if !face_detected and face_tracking.detect_faces():
      detection = tracking.detect()
      if detection['face']:
        chrome_message.send_message('{"action": "face_detected"}')

      if detection['smile']:
        if first_smile_t < 0: # first smile frame
          first_smile_t = current_milli_time()
        elif current_milli_time() - first_smile_t > SMILE_TIME:
          chrome_message.send_message('{"action": "smile_detected"}')
      else:
        # reset first smile time
        first_smile_t = -1

      distance = tof.get_distance() # in mm
      if distance > 0:
        # if far away, tof returns noisy range < 200
        # simply return a large number
        if distance < 200.:
          distance = 999.
        chrome_message.send_message('{"action": "tof_distance", "value": %f}' % distance)

      time.sleep(timing / 1000000.00)

  except KeyboardInterrupt:
    tracking._cleanup()
    sys.exit(0)

  # tof.stop_ranging()
  sys.exit(0)
